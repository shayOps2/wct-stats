---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: backend
    spec:
      initContainers:
        - args:
            - python -c 'import secrets; print(secrets.token_urlsafe(32))' > /run/secrets/backend-password
          command:
            - /bin/sh
            - -c
          image: python:3.12-slim
          imagePullPolicy: IfNotPresent
          name: password-init
          volumeMounts:
            - mountPath: /run/secrets
              name: backend-secret
      containers:
        - args:
            - export JWT_SECRET_KEY=$(cat $JWT_SECRET_KEY_FILE)  && exec gunicorn main:app -c gunicorn.conf.py -k uvicorn.workers.UvicornWorker --bind 0.0.0:8000
          command:
            - /bin/sh
            - -c
          env:
            - name: ENV
              value: production
            - name: JWT_SECRET_KEY_FILE
              value: /run/secrets/backend-password
            - name: MONGODB_URL
              value: mongodb://mongo:27017
          image: localhost:5000/wct-stats-backend
          name: backend
          ports:
            - containerPort: 8000
              protocol: TCP
          volumeMounts:
            - mountPath: /run/secrets
              name: backend-secret
      restartPolicy: Always
      volumes: 
      - name: backend-secret
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: backend
  name: backend
spec:
  ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
  selector:
    io.kompose.service: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: frontend
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: frontend
    spec:
      containers:
        - image: localhost:5000/wct-stats-frontend
          name: frontend
          ports:
            - containerPort: 80
              protocol: TCP
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: frontend
  name: frontend
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 80
  selector:
    io.kompose.service: frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
spec:
  ingressClassName: traefik
  rules:
  - host: frontend.example
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
spec:
  ingressClassName: traefik
  rules:
  - host: backend.example
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: mongo
    spec:
      containers:
        - image: mongo:6.0
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.adminCommand('ping')
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: mongo
          ports:
            - containerPort: 27017
              protocol: TCP
      restartPolicy: Always
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: mongo-restore
  name: mongo-restore
spec:
  containers:
    - image: localhost:5000/wct-stats-mongo-restore
      name: mongo-restore
  restartPolicy: OnFailure
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongo
