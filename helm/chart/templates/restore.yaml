apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "chart.fullname" . }}-mongo-restore
  labels:
    app.kubernetes.io/name: {{ include "chart.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: OnFailure
      imagePullSecrets:
{{- toYaml .Values.mongo.restore.imagePullSecrets | nindent 6 }}
      containers:
        - name: mongo-restore
          image: {{ .Values.mongo.restore.image.repository }}:{{ .Values.mongo.restore.image.tag }}
          imagePullPolicy: {{ .Values.mongo.restore.imagePullPolicy | default "IfNotPresent" | quote }}
          env:
            - name: MONGO_HOST
              value: "{{ printf "%s-mongo" (include "chart.fullname" .) }}"
          envFrom:
{{- toYaml .Values.mongo.restore.envFrom | nindent 12 }}
          command:
            - /bin/sh
            - -c
          args:
            - |
              set -eux;

              # skip restore if mongo already contains user data (more than 'admin' DB)
              COUNT=$(mongo --host "$MONGO_HOST" --quiet --eval "db.adminCommand('listDatabases').databases.length" | tr -d '\r')
              echo "Detected database count: ${COUNT}";
              if [ -n "$COUNT" ] && [ "$COUNT" -gt 1 ]; then
                echo "Mongo already has data, skipping restore";
                exit 0;
              fi
                            
              TMPDIR=/tmp/restore;
              mkdir -p "$TMPDIR";
              apt-get update && apt-get install -y curl
              echo "Downloading dump from $UPLOAD_PAR_URL";
              URL=$UPLOAD_PAR_URL"mongodump-wct.gz";
              curl -fSL -o "$TMPDIR/dump.tgz" "$URL";
              mongorestore --host "$MONGO_HOST" --archive="$TMPDIR/dump.tgz" --gzip --drop;
              echo "Restore complete";
      volumes: []