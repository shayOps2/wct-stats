# default values for the Helm chart
# This file can be overridden by providing a custom values file when installing the chart

backend:
  volumes:
    - emptyDir: {}
      name: backend-secret
  volumeMounts:
    - mountPath: /run/secrets
      name: backend-secret
  backend:
    command:
      - /bin/sh
      - -c
    args:
      - export JWT_SECRET_KEY=$(cat $JWT_SECRET_KEY_FILE)  && exec gunicorn main:app -c gunicorn.conf.py -k uvicorn.workers.UvicornWorker --bind 0.0.0:8000
    env:
      - name: ENV
        value: production
      - name: JWT_SECRET_KEY_FILE
        value: /run/secrets/backend-password
      - name: MONGODB_URL
        value: mongodb://__MONGO_HOST__:27017
    image:
      repository: ghcr.io/shayops2/wct-stats-backend
      tag: "v1.0.2"
    imagePullSecrets:
      - name: regcred
    imagePullPolicy: IfNotPresent
  passwordInit:
    args:
      - python -c 'import secrets; print(secrets.token_urlsafe(32))' > /run/secrets/backend-password
    command:
      - /bin/sh
      - -c
    image:
      repository: python
      tag: "3.12-slim"
    imagePullPolicy: IfNotPresent
  ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
  replicas: 1
  strategy:
    type: Recreate
  type: ClusterIP
frontend:
  image:
    repository: ghcr.io/shayops2/wct-stats-frontend
    tag: "v1.1.2"
  imagePullSecrets:
    - name: regcred
  imagePullPolicy: IfNotPresent
  ports:
    - name: "8080"
      port: 8080
      targetPort: 80
  replicas: 1
  type: ClusterIP
kubernetesClusterDomain: cluster.local
ingress:
  enabled: true
  annotations:
    enabled_annotations: true
    tailscale.com/funnel: "true"
  backend:
    host: backend.cheetoh-gila.ts.net
    paths:
      - /
    className: tailscale
  frontend:
    host: wct.cheetoh-gila.ts.net
    paths:
      - /
    className: tailscale
mongo:
  restore:
    imagePullSecrets:
      - name: regcred
    image:
      repository: ghcr.io/shayops2/wct-stats-mongo-restore
      tag: "1.0"
    imagePullPolicy: IfNotPresent
    command:
      - /bin/sh
      - -c
    args:
      - mongorestore --host __MONGO_HOST__ --dir=/dump --drop
  mongo:
    livenessProbe:
      exec:
        command:
          - mongosh
          - --eval
          - db.adminCommand('ping')
      failureThreshold: 5
      periodSeconds: 10
      timeoutSeconds: 5
    args:
      - --bind_ip_all
    image:
      repository: mongo
      tag: "6.0"
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  replicas: 1
  type: ClusterIP
